name: app-ci
on:
  push:
    branches: ["main"]
    paths:
      - "src/**"
      - "requirements.txt"
      - "Dockerfile"
      - ".github/workflows/ci.yml"

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository_owner }}/hello-app
  TAG: sha-${{ github.sha }}

jobs:
  build-scan-push:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      # Enable binfmt (qemu) for cross-arch builds
      - name: Enable binfmt (qemu) for cross-arch builds
        run: sudo podman run --rm --privileged docker.io/tonistiigi/binfmt --install all

      # Login to GHCR using Podman (rootless/daemonless)
      - name: Podman login (GHCR)
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build with Buildah multi-arch
      - name: Build (Buildah multi-arch)
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tags: latest ${{ env.TAG }}
          containerfiles: |
            ./Dockerfile
          context: .
          # Build both architectures and create a manifest list
          archs: amd64,arm64
          platforms: linux/amd64,linux/arm64

      # Push with Podman
      - name: Push to GHCR (Podman)
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Scan the remote image in GHCR (no local Podman socket needed)
      - name: Trivy scan (image in GHCR)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ghcr.io/${{ env.IMAGE }}:${{ env.TAG }}
          format: 'table'
          vuln-type: 'os,library'
          scanners: 'vuln'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: false
          exit-code: '1'
        env:
          TRIVY_USERNAME: ${{ github.repository_owner }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
